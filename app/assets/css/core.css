/*******************************************************************************
 *                                                                             *
 * Fonts                                                                       *
 *                                                                             *
 ******************************************************************************/

@font-face {
    font-family: 'Cairo SemiBold';
    src: url('../fonts/Cairo-SemiBold.ttf');
}

/*******************************************************************************
 *                                                                             *
 * Element Styles                                                              *
 *                                                                             *
 ******************************************************************************/

/* Reset body, html, and div presets. */
body, html, div {
    margin: 0px;
    padding: 0px;
}

/* Reset p presets. */
p {
    -webkit-margin-before: 0em;
    -webkit-margin-after: 0em;
}

/* Remove button outline. */
button:focus {
    outline: 0px;
}

/* Set default span styles. */
span {
    font-family: 'Cairo SemiBold';
    color: #fff;
}

/* Set the default background image. */
body {
    background: url('../images/default.jpg') no-repeat center center fixed;
    background-color: #5d5d74;
    background-size: cover;
    transition: background 0.25s linear;
}

/*******************************************************************************
 *                                                                             *
 * Frame Styles                                                                *
 *                                                                             *
 ******************************************************************************/

/* Frame Bar */
#frameBar {
    display: flex;
    flex-direction: column;
    background: rgba(1, 2, 1, 0.5);
    -webkit-user-select: none;
}

/* Undraggable region on the top of the frame. */
#frameResizableTop {
    height: 2px;
    width: 100%;
    -webkit-app-region: no-drag;
}

/* Flexbox to wrap the main frame content. */
#frameMain {
    display: flex;
    height: 28px
}

/* Undraggable region on the left and right of the frame. */
.frameResizableVert {
    width: 2px;
    -webkit-app-region: no-drag;
}

/* Main frame content. */
#frameContent {
    display: flex;
    justify-content: space-between;
    width: 100%;
    -webkit-app-region: drag;
}

/* Frame logo */
#frameTextDock {
    width: 100px;
    display: flex;
    justify-content: center;
    position: relative;
    top: -2px;
    left: -2px;
}
#frameText {
    color: #ffffff;
    font-family: 'Cairo SemiBold';
}

/* Frame button dock */
#frameButtonDock {
    -webkit-app-region: no-drag !important;
    position: relative;
    top: -2px;
    right: -2px;
    height: 30px;
}
#frameButtonDock > .frameButton:not(:first-child) {
    margin-left: -4px;
}

/* Set frame button styles */
.frameButton {
    background: none;
    border: none;
    height: 30px;
    width: 47px;
    cursor: pointer;
}
.frameButton:hover {
    background: rgba(189, 189, 189, 0.43);
}
.frameButton:active {
    background: rgba(156, 156, 156, 0.43);
}

/* Close button is red. */
#closeButton:hover {
    background: rgba(255, 53, 53, 0.61) !important;
}
#closeButton:active {
    background: rgba(235, 0, 0, 0.61) !important;
}

/*******************************************************************************
 *                                                                             *
 * App Content Container                                                       *
 *                                                                             *
 ******************************************************************************/

#appContent {
    position: relative;
    height: calc(100% - 30px);
    background: linear-gradient(to top, rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
    -webkit-user-select: none;
}

/*******************************************************************************
 *                                                                             *
 * Loading View Styles                                                         *
 *                                                                             *
 ******************************************************************************/

/* Main load view container. */
#loadContent {
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to top, rgba(101, 70, 0, 0.35), rgba(0, 0, 0, 0.35));
}

/* Load content container. */
#loadDock {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    top: -10%;
}

/* Spinner Object */
.spinner {
    width: 75px;
    height: 75px;
    background-color: #fff;
    border-radius: 100%;  
    -webkit-animation: sk-scaleout 1.0s infinite ease-in-out;
    animation: sk-scaleout 1.0s infinite ease-in-out;
}
@keyframes sk-scaleout {
    0% { 
        -webkit-transform: scale(0);
        transform: scale(0);
    }
    60% { 
        opacity: .5
    }
    100% {
        -webkit-transform: scale(1.0);
        transform: scale(1.0);
        opacity: 0;
    }
}

/* Header-like text */
#loadText {
    font-size: 30px;
    text-align: center;
}

/* Supplemental load details. */
#loadDetails {
    color: #ccc;
    font-size: 15px;
    text-align: center;
}

/* Retry button styles. */
#retryLoad {
    font-family: 'Cairo SemiBold';
    color: #fff;
    font-size: 75px;
    background: none;
    border: none;
    line-height: 75px;
    height: 75px;
    width: 75px;
    cursor: pointer;
    transition: .25s;
}
#retryLoad:hover {
    text-shadow: 0px 0px 10px #fff;
}
#retryLoad:active {
    text-shadow: 0px 0px 10px #fff;
    color: #ccc;
}
#retryLoad[disabled] {
    pointer-events: none;
}

/*******************************************************************************
 *                                                                             *
 * Main View Styles                                                            *
 *                                                                             *
 ******************************************************************************/

/* Main view container. */
#mainContent {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    height: 100%;
}

/* Info/settings container. */
#summonerDock {
    display: flex;
    flex-direction: column;
    position: relative;
    top: 20%;
    width: 80%;
    background: rgba(0, 0, 0, 0.39);
    padding: 25px;  
    height: 154px;
    transition: height 0.25s, top 0.25s;
}

/* Summoner info container. */
#summonerContent {
    display: flex;
}

#summonerIcon {
    height: 150px;
    width: auto;
    border: 2px solid #ffffff;
    border-image: linear-gradient(to bottom right, #eabd56 0%,#000000 60%, #000000 61%, #eabd56 100%);
    border-image-slice: 1;
}

/* Right half of Summoner Dock. */
#rightContent {
    display: flex;
    flex-direction: column;
    margin-left: 50px;
    width: 100%;
    justify-content: space-between;
}

#rightContent span {
    line-height: 30px;
}

/* Summoner dock top side. */
#sdTop {
    display: flex;
    flex-direction: column;
}

#summonerName {
    font-size: 35px;
}

#statusDock {
    display: flex;
    align-items: center;
}

/* Divider styles. */
.divider {
    height: 20px;
    width: 1.9px;
    background: rgba(255, 255, 255, 0.5);
    margin-left: 10px;
    margin-right: 10px;
}

/* Button dock at the bottom of the summoner dock. */
#summonerButtonDock {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
}

/* Summoner button dock left side. */
#sbdLeft {
    display: flex;
    align-items: flex-end;
}

/* Shared toggle button styles. */
.toggleButton {
    font-family: 'Cairo SemiBold';
    border: none;
    color: white;
    width: 115px;
    font-size: 14px;
    transition: .25s;
    cursor: pointer;
}

/* Enable button styles. */
#enableButton {
    background: linear-gradient(to top left, rgba(47, 93, 39, 0.75), rgba(40, 160, 0, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(153, 243, 95, 0.23);
}
#enableButton:hover {
    box-shadow: inset 0px 9px 40px 0px rgba(153, 243, 95, 0.23);
}
#enableButton:active {
    box-shadow: inset 0px 9px 40px 0px rgba(0, 0, 0, 0.23);
}

/* Disable button styles. */
#disableButton {
    background: linear-gradient(to top left, rgba(93, 39, 39, 0.75), rgba(160, 0, 0, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(243, 95, 95, 0.23);
}
#disableButton:hover {
    box-shadow: inset 0px 9px 40px 0px rgba(243, 95, 95, 0.23);
}
#disableButton:active {
    box-shadow: inset 0px 9px 40px 0px rgba(0, 0, 0, 0.23);
}

/* Settings button styles. */
#settingsButton {
    background: none;
    border: none;
    padding: 0px;
    cursor: pointer;
    fill: #ffffff;
}
#settingsButton:hover {
    fill: #e0e0e0;
}
#settingsButton:active {
    fill: #c0c0c0;
}
#settingsSVG {
    transition:.25s
}

/*******************************************************************************
 *                                                                             *
 * Settings Styles                                                             *
 *                                                                             *
 ******************************************************************************/

/* Main settings view container. */
#settingsContent {
    display: flex;
    flex-direction: column;
    padding: 5px 25px;
    height: 100%;
}

/* Settings view header text. */
#settingsHeader {
    font-size: 25px;
    margin-bottom: 5px;
}

/* Div which contains each settings field. */
#settingsManagement {
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    overflow-x: hidden;
    /*width: calc(100% + 5px);*/
    width: 100%;
}

/* Add a divider between each settings field. */
#settingsManagement > .settingsField:not(:first-child) {
    border-top: 1px solid rgba(255, 255, 255, 0.50);
}

/* Settings management scrollbar styles. */
#settingsManagement::-webkit-scrollbar {
    width: 5px;
}
#settingsManagement::-webkit-scrollbar-track {
    display: none;
}
#settingsManagement::-webkit-scrollbar-thumb {
    border-radius: 10px;
    box-shadow: inset 0 0 10px rgb(255, 255, 255) 
}

/* Settings field styles. */
.settingsField {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    min-height: 75px;
    background: rgba(0, 0, 0, 0.39);
    box-sizing: border-box;
    padding: 15px;
    transition: 0.25s;
}

/* Invalid setting class. */
.invalidSetting {
    background: rgba(255, 17, 17, 0.34) !important;
}

/* Left side of a settings field. */
.settingsFieldLeft {
    display: flex;
    flex-direction: column;
}

/* Settings field title. */
.settingTitle {
    font-size: 15px;
}

/* Settings field description. */
.settingDesc {
    font-size: 12px;
    color: #ccc;
}

/* Right side of a settings field. */
.settingsFieldRight {
    display: flex;
    align-items: center;
}

/* Field for number inputs. */
.settingsNumberField {
    width: 35px;
    font-size: 15px;
    line-height: 21px;
    white-space: nowrap;
    overflow: hidden;
    text-align: center;
    background: rgba(0, 94, 160, 0.69);
}
.settingsNumberField:hover,
.settingsNumberField:focus,
.settingsNumberField:active {
    outline: none;
}

/* Standard label. */
.settingsFieldLabel {
    margin-left: 5px;
    font-size: 13px;
    line-height: 11px;
}

/* Container for baseline settings view elements. */
#settingsBottom {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-top: 10px
}

/* Settings status bar and text. */
#settingsStatus {
    display: flex;
}
#settingsStatus > span {
    color: white;
    line-height: 10px;
    font-size: 10px;
}

/* Button dock at the bottom of the settings view. */
#settingsButtonDock {
    display: flex;
}

/* Shared settings button styles. */
.settingsButton {
    font-family: 'Cairo SemiBold';
    border: none;
    color: white;
    width: 75px;
    font-size: 14px;
    height: 27px;
    transition: .25s;
    cursor: pointer;
}

/* Settings done button styles. */
#settingsDoneButton {
    margin-left: 10px;
    background: linear-gradient(to top left, rgba(39, 71, 93, 0.75), rgba(0, 94, 160, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(95, 154, 243, 0.23)
}
#settingsDoneButton:hover {
    box-shadow: inset 0px 9px 40px 0px rgba(95, 154, 243, 0.23)
}
#settingsDoneButton:active {
    box-shadow: inset 0px 9px 40px 0px rgba(0, 0, 0, 0.23);
}
#settingsDoneButton:disabled {
    pointer-events: none;
    color: #676767;
    background: linear-gradient(to top left, rgba(17, 31, 41, 0.75), rgba(0, 36, 62, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(42, 70, 111, 0.23);
}

/* Settings undo button styles. */
#settingsUndoButton {
    background: linear-gradient(to top left, rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(255, 255, 255, 0.23)
}
#settingsUndoButton:hover {
    box-shadow: inset 0px 9px 40px 0px rgba(255, 255, 255, 0.23);
}
#settingsUndoButton:active {
    box-shadow: inset 0px 9px 40px 0px rgba(0, 0, 0, 0.23);
}
#settingsUndoButton:disabled {
    pointer-events: none;
    color: #676767;
    background: linear-gradient(to top left, rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0.69));
    box-shadow: inset 0px 9px 12px 0px rgba(88, 88, 88, 0.23)
}

/* Toggle Switch. */

/* The switch - the box around the slider */
.switch {
    position: relative;
    display: inline-block;
    width: 36px;
    height: 21px;
}
  
/* Hide default HTML checkbox. */
.switch input {
    display: none;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
}
.slider:before {
    position: absolute;
    content: "";
    height: 15px;
    width: 15px;
    left: 3px;
    bottom: 3px;
    background-color: white;
    transition: .4s;
}
  
input:checked + .slider {
    background-color: rgb(32, 91, 143);
}
input:focus + .slider {
    box-shadow: 0 0 1px rgb(32, 91, 143);
}
input:checked + .slider:before {
    transform: translateX(15px);
}